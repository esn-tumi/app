mutation RegisterUser($userInput: CreateUserInput!) {
  createUser(input: $userInput) {
    id
  }
}

#query getPaymentSetupSession {
#  getPaymentSetupSession {
#    id
#  }
#}

query getPhotoJourney {
  currentUser {
    eventRegistrations {
      id
      status
      event {
        id
        title
        icon
        location
        start
        photoShares {
          id
          type
          src
          original
          originalBlob
          container
          cols
          rows
        }
      }
    }
  }
}

query userProfile {
  currentUser {
    id
    fullName
    picture
    emailVerified
    email
    phone
    university
    iban
    paypal
    birthdate
    firstName
    lastName
    calendarToken
    hasESNCard
    enrolmentStatus
    currentTenant {
      userId
      tenantId
      status
      stripeData {
        paymentMethodId
      }
    }
    organizedEvents(hideCancelled: true) {
      id
      title
      icon
      start
      end
      needsRating
      userIsOrganizer
      participantRating
      participantRatingCount
    }
    participatedEvents(hideCancelled: true) {
      id
      title
      icon
      start
      end
      needsRating
      userIsOrganizer
      participantRating
      participantRatingCount
    }
  }
}

query getRegistrationCodeInfo($code: ID!) {
  eventRegistrationCode(id: $code) {
    id
    status
    registrationCreated {
      id
      belongsToCurrentUser
      transaction {
        id
        stripePayment {
          id
          status
          checkoutSession
        }
      }
    }
    targetEvent {
      id
      registrationMode
      title
      start
      prices
    }
  }
}

mutation submitEventFeedback(
  $id: ID!
  $anonymousRating: Boolean!
  $rating: Int!
  $comment: String
) {
  rateEvent(
    id: $id
    anonymousRating: $anonymousRating
    rating: $rating
    comment: $comment
  ) {
    id
    needsRating
  }
}

mutation useRegistrationCode($id: ID!, $price: JSON) {
  useRegistrationCode(id: $id, price: $price) {
    id
    status
    registrationCreated {
      id
      belongsToCurrentUser
      transaction {
        id
        stripePayment {
          id
          status
          checkoutSession
        }
      }
    }
    targetEvent {
      id
      registrationMode
      title
      start
      prices
    }
  }
}

mutation updateProfile($input: UpdateUserInput!, $userId: ID!) {
  updateUser(input: $input, userId: $userId) {
    id
    firstName
    lastName
    fullName
    university
    enrolmentStatus
    phone
  }
}
