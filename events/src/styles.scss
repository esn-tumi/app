@use '@angular/material' as mat;

@tailwind base;
@tailwind components;
@tailwind utilities;
// Plus imports for other components in your app.

$tumi-typography: mat.define-typography-config(
  $font-family: theme('fontFamily.sans'),
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($tumi-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$tumi-events-primary: mat.define-palette(mat.$indigo-palette);
$tumi-events-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$tumi-events-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$tumi-events-theme: mat.define-light-theme(
  (
    color: (
      primary: $tumi-events-primary,
      accent: $tumi-events-accent,
      warn: $tumi-events-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($tumi-events-theme);

html,
body {
  height: 100%;
}
body {
  margin: 0;
}
